@foreach(var post in Model.DocumentList(Keys.PageDocuments)
                          .OrderByDescending(p => p.Get<DateTime>(BlogKeys.Published))
                          .Take(5))
{
    <div class="col-sm">
        <div class="card mb-3">
            <div class="btn-group">
                <a role="button" href="@Context.GetLink(post)" class="btn btn-primary btn-lg text-left">@post.WithoutSettings.String(BlogKeys.Title)</a>
            </div>
            <div class="card-body pb-1">
                <div class="">
                    @if(Context.Bool(BlogKeys.IndexFullPosts))
                    {
                        @Html.Raw(post.Content)
                    }
                    else
                    {
                        @Html.Raw(post.String(BlogKeys.Excerpt))
                    }
                </div>

                <p class="text-muted">Posted @(post.Get<DateTime>(BlogKeys.Published).ToLongDateString(Context))</p>
            </div>

            @{
                var tags = post.Get<IEnumerable<string>>(BlogKeys.Tags);

                if(tags.Any())
                {
                    <div class="btn-group">
                        @foreach(var tag in tags.OrderBy(t => t))
                        {
                            var tagDocument = Documents[Blog.Tags].FirstOrDefault(t => t.String(BlogKeys.Tag) == tag &&
                                                                                  t.Get<int>(Keys.CurrentPage) == 1);
                            
                            if(tagDocument != null)
                            {
                                <a role="button" href="@Context.GetLink(tagDocument)" class="btn btn-secondary btn-sm">@tag</a>
                            }
                        }
                    </div>
                }
            }
        </div>
    </div>
}
